# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

# This workflow builds and tests the gem for each platform target and Ruby version.
# It ensures the built gem is used regardless of Gemfile.

name: Ruby

on:
  push:
    branches: [ master, ci-dev ]
  pull_request:
    branches: [ master, ci-dev ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        ruby-version: [2.7, '3.0', 3.1, 3.2, 3.3, 3.4, head, debug, truffleruby]
        include:
          - arch_os: aarch64-darwin
            os: macos-latest
          - arch_os: x86_64-linux
            os: ubuntu-latest
          # - arch_os: aarch64-linux
          #   os: ubuntu-latest
          # - arch_os: arm-linux
          #   os: ubuntu-latest
          # - arch_os: i386-linux
          #   os: ubuntu-latest
          # - arch_os: i686-windows
          #   os: windows-latest
          # - arch_os: riscv64-linux
          #   os: ubuntu-latest
          # - arch_os: x86_64-darwin
          #   os: macos-latest
          # - arch_os: x86_64-windows
          #   os: windows-latest
    continue-on-error: ${{ endsWith(matrix.ruby-version, 'head') || matrix.ruby-version == 'debug' }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true
      - name: Build gem for platform
        run: |
          bundle exec rake ethon_impersonate:build[${{ matrix.arch_os }}]
      - name: Install built gem for platform
        run: |
          version=$(ruby -r ./lib/ethon_impersonate/version.rb -e 'puts EthonImpersonate::VERSION')
          gem_file=$(ls ethon-impersonate-${version}-*.gem | grep ${{ matrix.arch_os }} | head -n1)
          if [ -z "$gem_file" ]; then
            echo "Gem file for ${{ matrix.arch_os }} not found!"; exit 1;
          fi
          gem install ./$gem_file --force
      - name: Run tests with built gem
        run: bundle exec rspec

# Note: To enable more platforms, uncomment the relevant arch_os and ensure runners support them.
